// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package api

import "encoding/json"
import "fmt"

type RegisterAgentRequestJson struct {
	// A user friendly description of the agent
	Description *string `json:"description,omitempty"`

	// The maximum number of workloads this agent can hold. 0 indicates unlimited
	MaxWorkloads *float64 `json:"max_workloads,omitempty"`

	// Name of the agent
	Name string `json:"name"`

	// Version of the agent
	Version string `json:"version"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *RegisterAgentRequestJson) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["name"]; raw != nil && !ok {
		return fmt.Errorf("field name in RegisterAgentRequestJson: required")
	}
	if _, ok := raw["version"]; raw != nil && !ok {
		return fmt.Errorf("field version in RegisterAgentRequestJson: required")
	}
	type Plain RegisterAgentRequestJson
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = RegisterAgentRequestJson(plain)
	return nil
}
